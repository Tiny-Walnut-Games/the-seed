[
  {
    "request": "Create a survivor.io game with waves and upgrades",
    "success": true,
    "analysis": {
      "game_type": "survivor.io",
      "complexity_level": "moderate",
      "required_systems": [
        "PlayerController",
        "EnemySpawner",
        "WeaponSystem",
        "UpgradeManager",
        "WaveManager",
        "ExperienceManager",
        "HealthSystem",
        "DamageSystem"
      ],
      "recommended_folders": [
        "Scripts/Player",
        "Scripts/Enemies",
        "Scripts/Weapons",
        "Scripts/Upgrades",
        "Scripts/Managers",
        "Scripts/UI",
        "Scripts/Projectiles"
      ],
      "unity_packages": [
        "InputSystem",
        "2D Sprite",
        "Cinemachine"
      ],
      "estimated_dev_time": "3-5 weeks",
      "key_mechanics": [
        "top-down movement",
        "automatic shooting",
        "enemy waves",
        "experience collection",
        "upgrade selection",
        "damage numbers",
        "procedural spawning"
      ],
      "technical_considerations": [
        "object pooling for projectiles",
        "efficient enemy spawning",
        "performance with 100+ entities",
        "mobile-friendly controls"
      ],
      "suggested_architecture": "Component-based with ScriptableObject configs",
      "warbler_insights": "Survivor.io games require efficient spawning, object pooling, and scalable upgrade systems. Focus on performance optimization and clear visual feedback.",
      "warbler_enhancement": {
        "tlda_integration": true,
        "auto_documentation": true,
        "performance_monitoring": true,
        "suggested_tldl_tags": [
          "project-setup",
          "warbler-generated",
          "survivor.io",
          "wave-defense",
          "upgrades",
          "survival"
        ],
        "development_milestones": [
          "Player movement and basic shooting (Week 1)",
          "Enemy spawning and collision (Week 2)",
          "Upgrade system and UI (Week 3)",
          "Wave progression and balance (Week 4)",
          "Polish and optimization (Week 5)"
        ],
        "testing_strategy": [
          "Performance testing with 100+ enemies",
          "Upgrade balance testing",
          "Wave difficulty progression",
          "Mobile input responsiveness"
        ]
      }
    },
    "validation": {
      "folders_created": 7,
      "scripts_created": 8,
      "folders_expected": 7,
      "scripts_expected": 8,
      "tldl_created": true,
      "blueprint_created": true,
      "issues": []
    }
  },
  {
    "request": "Create a tower defense strategy game",
    "success": true,
    "analysis": {
      "game_type": "tower-defense",
      "complexity_level": "complex",
      "required_systems": [
        "GridSystem",
        "TowerPlacement",
        "TowerUpgrade",
        "EnemyPathfinding",
        "WaveSpawner",
        "ResourceManager",
        "ProjectileSystem",
        "TargetingSystem"
      ],
      "recommended_folders": [
        "Scripts/Grid",
        "Scripts/Towers",
        "Scripts/Enemies",
        "Scripts/Pathfinding",
        "Scripts/Managers",
        "Scripts/UI",
        "Scripts/Economy"
      ],
      "unity_packages": [
        "InputSystem",
        "2D Tilemap Extras",
        "NavMesh Components"
      ],
      "estimated_dev_time": "6-8 weeks",
      "key_mechanics": [
        "grid-based placement",
        "pathfinding AI",
        "tower targeting",
        "resource management",
        "wave progression",
        "tower upgrades",
        "strategic planning"
      ],
      "technical_considerations": [
        "efficient pathfinding algorithms",
        "grid optimization",
        "projectile pooling",
        "AI performance scaling"
      ],
      "suggested_architecture": "ECS with ScriptableObject data",
      "warbler_insights": "Tower Defense requires robust pathfinding, efficient grid systems, and balanced economic progression. Focus on modular tower design.",
      "warbler_enhancement": {
        "tlda_integration": true,
        "auto_documentation": true,
        "performance_monitoring": true,
        "suggested_tldl_tags": [
          "project-setup",
          "warbler-generated",
          "tower-defense",
          "strategy",
          "grid-system",
          "pathfinding"
        ],
        "development_milestones": [
          "Grid system and basic placement (Week 1-2)",
          "Pathfinding and enemy movement (Week 3-4)",
          "Tower systems and targeting (Week 5-6)",
          "Economy and progression (Week 7)",
          "Balance and polish (Week 8)"
        ],
        "testing_strategy": [
          "Pathfinding stress testing",
          "Tower placement validation",
          "Economic balance testing",
          "Performance with multiple units"
        ]
      }
    },
    "validation": {
      "folders_created": 7,
      "scripts_created": 8,
      "folders_expected": 7,
      "scripts_expected": 8,
      "tldl_created": true,
      "blueprint_created": true,
      "issues": []
    }
  },
  {
    "request": "Create a 2D platformer with collectibles",
    "success": true,
    "analysis": {
      "game_type": "platformer",
      "complexity_level": "moderate",
      "required_systems": [
        "PlayerMovement",
        "JumpController",
        "PlatformController",
        "EnemyAI",
        "CollectibleSystem",
        "LevelManager",
        "CheckpointSystem",
        "CameraController"
      ],
      "recommended_folders": [
        "Scripts/Player",
        "Scripts/Enemies",
        "Scripts/Platforms",
        "Scripts/Collectibles",
        "Scripts/Managers",
        "Scripts/UI",
        "Scripts/Environment"
      ],
      "unity_packages": [
        "InputSystem",
        "2D Tilemap Extras",
        "Cinemachine",
        "2D Physics"
      ],
      "estimated_dev_time": "4-6 weeks",
      "key_mechanics": [
        "precise jumping",
        "physics-based movement",
        "enemy collisions",
        "collectible gathering",
        "level progression",
        "checkpoint system"
      ],
      "technical_considerations": [
        "tight control responsiveness",
        "physics consistency",
        "level streaming",
        "save system integration"
      ],
      "suggested_architecture": "Component-based with State Machines",
      "warbler_insights": "Platformers require precise controls, consistent physics, and well-designed level progression. Focus on player feel and responsive input.",
      "warbler_enhancement": {
        "tlda_integration": true,
        "auto_documentation": true,
        "performance_monitoring": true,
        "suggested_tldl_tags": [
          "project-setup",
          "warbler-generated",
          "platformer",
          "physics",
          "level-design",
          "collectibles"
        ],
        "development_milestones": [
          "Player movement and jumping (Week 1-2)",
          "Basic level design and platforms (Week 3)",
          "Enemies and collision systems (Week 4)",
          "Collectibles and progression (Week 5)",
          "Polish and level creation (Week 6)"
        ],
        "testing_strategy": [
          "Physics consistency testing",
          "Control responsiveness validation",
          "Level completion playtesting",
          "Edge case collision testing"
        ]
      }
    },
    "validation": {
      "folders_created": 7,
      "scripts_created": 8,
      "folders_expected": 7,
      "scripts_expected": 8,
      "tldl_created": true,
      "blueprint_created": true,
      "issues": []
    }
  }
]