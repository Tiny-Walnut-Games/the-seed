name: 🎭 Weekly Wisdom Oracle
# Automatically generates fresh quotes using Warbler every week

on:
  schedule:
    # Run every Sunday at 06:00 UTC (generates quotes for the week)
    - cron: '0 6 * * 0'
  workflow_dispatch:
    inputs:
      quote_count:
        description: 'Number of quotes to generate'
        required: false
        default: '5'
        type: string
      force_generation:
        description: 'Force generation even if recent quotes exist'
        required: false
        default: false
        type: boolean

env:
  PYTHON_VERSION: '3.11'

jobs:
  generate-wisdom:
    name: 🧙‍♂️ Generate Weekly Wisdom
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML argparse
          
          # Install additional dependencies if requirements exist
          if [ -f scripts/requirements.txt ]; then
            pip install -r scripts/requirements.txt
          fi
      
      - name: 🎭 Generate Weekly Wisdom
        id: generate
        run: |
          # Set quote count from input or default
          QUOTE_COUNT="${{ github.event.inputs.quote_count || '5' }}"
          
          echo "🎭 Generating $QUOTE_COUNT wisdom quotes..."
          
          # Make scripts executable
          chmod +x scripts/weekly-wisdom-oracle.sh
          chmod +x scripts/lda-quote
          
          # Generate wisdom quotes
          scripts/weekly-wisdom-oracle.sh generate "$QUOTE_COUNT"
          
          # Check if any files were modified
          if [ -n "$(git status --porcelain)" ]; then
            echo "wisdom_generated=true" >> $GITHUB_OUTPUT
            echo "quote_count=$QUOTE_COUNT" >> $GITHUB_OUTPUT
          else
            echo "wisdom_generated=false" >> $GITHUB_OUTPUT
            echo "No new wisdom generated"
          fi
      
      - name: 🧪 Test Generated Quotes
        if: steps.generate.outputs.wisdom_generated == 'true'
        run: |
          echo "🧪 Testing generated quote retrieval..."
          
          # Test basic quote retrieval
          python3 src/ScrollQuoteEngine/warbler_quote_engine.py
          
          # Test context-specific quotes
          python3 src/ScrollQuoteEngine/warbler_quote_engine.py --context development --format markdown
          
          # Show statistics
          python3 src/ScrollQuoteEngine/warbler_quote_engine.py --stats
      
      - name: 📊 Generate Wisdom Report
        if: steps.generate.outputs.wisdom_generated == 'true'
        id: report
        run: |
          # Create wisdom generation report
          cat > wisdom_generation_report.md << 'EOF'
          # 🎭 Weekly Wisdom Oracle Report
          
          **Generation Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          **Quotes Generated**: ${{ steps.generate.outputs.quote_count }}
          **Trigger**: ${{ github.event_name == 'schedule' && 'Scheduled (Weekly)' || 'Manual Dispatch' }}
          
          ## 📊 Oracle Statistics
          
          ```
          $(python3 src/ScrollQuoteEngine/warbler_quote_engine.py --stats)
          ```
          
          ## ✨ Sample Generated Quotes
          
          ### Development Wisdom
          ```
          $(python3 src/ScrollQuoteEngine/warbler_quote_engine.py --context development)
          ```
          
          ### Documentation Insight
          ```
          $(python3 src/ScrollQuoteEngine/warbler_quote_engine.py --context documentation)
          ```
          
          ### Debugging Proverb
          ```
          $(python3 src/ScrollQuoteEngine/warbler_quote_engine.py --context debug)
          ```
          
          ---
          
          **🎭 Generated by the Warbler-Powered Weekly Wisdom Oracle**
          
          > *"Fresh wisdom flows from the living oracle, breathing new life into ancient scrolls."*
          > — Oracle of Weekly Renewal, Cycles of Wisdom, Vol. I
          EOF
          
          # Process the template
          envsubst < wisdom_generation_report.md > wisdom_report_final.md
          
          echo "report_created=true" >> $GITHUB_OUTPUT
      
      - name: 📝 Commit Generated Wisdom
        if: steps.generate.outputs.wisdom_generated == 'true'
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "Weekly Wisdom Oracle"
          
          # Add generated files
          git add data/generated_wisdom_cache.json
          
          # Create commit message
          COMMIT_MSG="🎭 Generate weekly wisdom oracle quotes

          - Generated ${{ steps.generate.outputs.quote_count }} new wisdom quotes
          - Updated via Warbler-powered oracle system
          - Trigger: ${{ github.event_name == 'schedule' && 'Weekly schedule' || 'Manual dispatch' }}
          
          ✨ Fresh wisdom for the Secret Art of the Living Dev"
          
          # Commit changes
          git commit -m "$COMMIT_MSG"
      
      - name: 🚀 Push Wisdom to Repository
        if: steps.generate.outputs.wisdom_generated == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      
      - name: 📋 Create Wisdom Summary Issue
        if: steps.generate.outputs.wisdom_generated == 'true' && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the wisdom report
            let reportContent = "## 🎭 Weekly Wisdom Oracle Summary\n\n";
            reportContent += `**Generated**: ${new Date().toISOString().split('T')[0]}\n`;
            reportContent += `**Quote Count**: ${{ steps.generate.outputs.quote_count }}\n\n`;
            reportContent += "The Weekly Wisdom Oracle has generated fresh quotes for the Secret Art of the Living Dev.\n\n";
            reportContent += "Check the updated quote database and try the new Warbler-powered features:\n\n";
            reportContent += "```bash\n";
            reportContent += "# Test the new wisdom\n";
            reportContent += "scripts/lda-quote --warbler\n";
            reportContent += "scripts/lda-quote --stats\n";
            reportContent += "```\n\n";
            reportContent += "🎭 **Warbler Oracle**: Fresh wisdom flows from the living scrolls!";
            
            // Create issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🎭 Weekly Wisdom Oracle - ${new Date().toISOString().split('T')[0]}`,
              body: reportContent,
              labels: ['oracle', 'weekly-wisdom', 'warbler', 'enhancement']
            });
      
      - name: 📊 Upload Wisdom Artifacts
        if: steps.generate.outputs.wisdom_generated == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: weekly-wisdom-oracle-${{ github.run_number }}
          path: |
            data/generated_wisdom_cache.json
            wisdom_report_final.md
          retention-days: 30
      
      - name: 💬 Add Workflow Summary
        run: |
          if [ "${{ steps.generate.outputs.wisdom_generated }}" == "true" ]; then
            echo "## 🎭 Weekly Wisdom Oracle Success" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✨ Generated ${{ steps.generate.outputs.quote_count }} new wisdom quotes" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📊 Oracle Statistics" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            python3 src/ScrollQuoteEngine/warbler_quote_engine.py --stats >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🧪 Sample Quote" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            python3 src/ScrollQuoteEngine/warbler_quote_engine.py --warbler >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "## 🎭 Weekly Wisdom Oracle" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ No new wisdom generated (quotes may be recent)" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: 🎉 Success Notification
        if: steps.generate.outputs.wisdom_generated == 'true'
        run: |
          echo "🎭✨ Weekly Wisdom Oracle completed successfully!"
          echo "   📚 ${{ steps.generate.outputs.quote_count }} new quotes generated"
          echo "   🎲 Try: scripts/lda-quote --warbler"
          echo "   📊 Stats: scripts/lda-quote --stats"
          echo ""
          echo "🪶 Fresh wisdom flows from the living oracle!"

  notify-failure:
    name: 📢 Notify Oracle Failure
    runs-on: ubuntu-latest
    needs: generate-wisdom
    if: failure()
    
    steps:
      - name: 🚨 Wisdom Oracle Failed
        uses: actions/github-script@v7
        with:
          script: |
            const issueBody = `## 🚨 Weekly Wisdom Oracle Failure
            
            The Weekly Wisdom Oracle failed to generate quotes on ${new Date().toISOString().split('T')[0]}.
            
            **Workflow Run**: [${context.runNumber}](${context.payload.repository.html_url}/actions/runs/${context.runId})
            **Trigger**: ${context.eventName === 'schedule' ? 'Scheduled (Weekly)' : 'Manual Dispatch'}
            
            ### 🔍 Investigation Needed
            
            Please check:
            - Warbler template availability
            - Python dependencies
            - Quote database integrity
            - Repository permissions
            
            ### 🛠️ Manual Recovery
            
            You can manually trigger wisdom generation:
            
            \`\`\`bash
            scripts/weekly-wisdom-oracle.sh generate 5
            \`\`\`
            
            🎭 **Oracle Status**: Requires attention to restore the flow of wisdom.`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Weekly Wisdom Oracle Failure - ${new Date().toISOString().split('T')[0]}`,
              body: issueBody,
              labels: ['bug', 'oracle', 'weekly-wisdom', 'high-priority']
            });
