name: 🧪 Alchemist Determinism Smoke Test

# Validates that Alchemist experiments produce deterministic results
# when run with the same seeds and environment configuration
on:
  push:
    branches: [main, develop]
    paths:
      - 'assets/experiments/**/*.yaml'
      - 'gu_pot/**/*.yaml'
      - 'packages/com.twg.the-seed/The Living Dev Agent/scripts/alchemist-faculty/**'
      - 'engine/experiment_harness.py'
  pull_request:
    branches: [main]
    paths:
      - 'assets/experiments/**/*.yaml'
      - 'gu_pot/**/*.yaml'
      - 'packages/com.twg.the-seed/The Living Dev Agent/scripts/alchemist-faculty/**'
      - 'engine/experiment_harness.py'
  schedule:
    # Run determinism tests weekly on Sundays at 6 AM UTC
    - cron: '0 6 * * 0'
  workflow_dispatch:
    inputs:
      run_count:
        description: 'Number of runs per experiment'
        required: false
        default: '3'
      variance_threshold:
        description: 'Variance threshold for determinism'
        required: false
        default: '0.01'

# Concurrency control to avoid conflicts
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 🧙‍♂️ Determinism smoke test for critical experiment reproducibility
  determinism-smoke-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements.txt'

      - name: Install dependencies
        run: |
          echo "📦 Installing Python dependencies for determinism testing..."
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt || echo "✅ Core dependencies available"

      - name: Make scripts executable
        run: |
          chmod +x "packages/com.twg.the-seed/The Living Dev Agent/scripts/alchemist-faculty/determinism_smoke_test.py"
          chmod +x scripts/*.sh

      - name: Create test manifest
        run: |
          echo "🧪 Creating test manifest for determinism validation..."
          python3 "packages/com.twg.the-seed/The Living Dev Agent/scripts/alchemist-faculty/determinism_smoke_test.py" create-test-manifest \
            --output test_determinism_manifest.yaml

      - name: Test determinism script functionality
        run: |
          echo "🔍 Testing determinism script with synthetic manifest..."
          python3 "packages/com.twg.the-seed/The Living Dev Agent/scripts/alchemist-faculty/determinism_smoke_test.py" test \
            --manifest test_determinism_manifest.yaml \
            --run-count ${{ github.event.inputs.run_count || '3' }} \
            --variance-threshold ${{ github.event.inputs.variance_threshold || '0.01' }}

      - name: Find experiment manifests
        id: find_manifests
        run: |
          echo "📋 Discovering experiment manifests..."
          
          # Find experiment manifests in known locations
          manifests=$(python3 "packages/com.twg.the-seed/The Living Dev Agent/scripts/alchemist-faculty/determinism_smoke_test.py" find-manifests \
            --search-path . \
            --pattern "*.yaml" | grep -E "^\s*•" | sed 's/^\s*•\s*//' || echo "")
          
          # Count manifests properly
          manifest_count=0
          if [ -n "$manifests" ]; then
            manifest_count=$(echo "$manifests" | wc -l)
          fi
          
          echo "manifest_count=$manifest_count" >> $GITHUB_OUTPUT
          echo "manifests=$manifests" >> $GITHUB_OUTPUT
          
          echo "📊 Found $manifest_count experiment manifests for testing"

      - name: Run determinism test suite
        if: steps.find_manifests.outputs.manifest_count > 0
        id: determinism_test
        run: |
          echo "🧙‍♂️ Running Alchemist determinism test suite..."
          
          # Create results directory
          mkdir -p experiments/determinism_tests
          
          # Run determinism test suite on found manifests
          set +e  # Don't exit on test failures, we want to capture results
          
          python3 "packages/com.twg.the-seed/The Living Dev Agent/scripts/alchemist-faculty/determinism_smoke_test.py" suite \
            --search-path . \
            --pattern "*.yaml" \
            --run-count ${{ github.event.inputs.run_count || '3' }} \
            --variance-threshold ${{ github.event.inputs.variance_threshold || '0.01' }} \
            --results-path experiments/determinism_tests > determinism_suite_output.txt 2>&1
          
          exit_code=$?
          
          # Capture results for PR comment/status
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          
          # Extract summary from output
          if [[ -f experiments/determinism_tests/determinism_report_*.txt ]]; then
            latest_report=$(ls -t experiments/determinism_tests/determinism_report_*.txt | head -n1)
            echo "report_file=$latest_report" >> $GITHUB_OUTPUT
            
            # Extract key metrics for status
            success_rate=$(grep "Success Rate:" "$latest_report" | sed 's/.*Success Rate: \([0-9.]*\)%.*/\1/' || echo "0")
            echo "success_rate=$success_rate" >> $GITHUB_OUTPUT
            
            deterministic_count=$(grep "✅ Deterministic:" "$latest_report" | sed 's/.*✅ Deterministic: \([0-9]*\).*/\1/' || echo "0")
            echo "deterministic_count=$deterministic_count" >> $GITHUB_OUTPUT
            
            non_deterministic_count=$(grep "❌ Non-deterministic:" "$latest_report" | sed 's/.*❌ Non-deterministic: \([0-9]*\).*/\1/' || echo "0")
            echo "non_deterministic_count=$non_deterministic_count" >> $GITHUB_OUTPUT
          fi
          
          # Display output
          cat determinism_suite_output.txt
          
          exit $exit_code

      - name: No manifests found
        if: steps.find_manifests.outputs.manifest_count == 0
        run: |
          echo "ℹ️ No experiment manifests found for determinism testing"
          echo "✅ Determinism smoke test skipped - no experiments to validate"

      - name: Upload determinism test results
        if: always() && steps.determinism_test.conclusion != 'skipped'
        uses: actions/upload-artifact@v4
        with:
          name: determinism-test-results
          path: |
            experiments/determinism_tests/
            determinism_suite_output.txt
            test_determinism_manifest.yaml
          retention-days: 30

      - name: Generate determinism status badge data
        if: always() && steps.determinism_test.conclusion != 'skipped'
        run: |
          echo "🏷️ Generating determinism status badge data..."
          
          success_rate="${{ steps.determinism_test.outputs.success_rate || '0' }}"
          deterministic_count="${{ steps.determinism_test.outputs.deterministic_count || '0' }}"
          non_deterministic_count="${{ steps.determinism_test.outputs.non_deterministic_count || '0' }}"
          total_count=$((deterministic_count + non_deterministic_count))
          
          # Determine badge color and status
          if [[ "$success_rate" == "100.0" || "$success_rate" == "100" ]]; then
            badge_color="brightgreen"
            badge_status="✅ All Deterministic"
          elif [[ $(echo "$success_rate >= 80" | bc -l) == 1 ]]; then
            badge_color="yellow"
            badge_status="⚠️ Mostly Deterministic"
          elif [[ $(echo "$success_rate >= 50" | bc -l) == 1 ]]; then
            badge_color="orange"
            badge_status="⚠️ Some Issues"
          else
            badge_color="red"
            badge_status="❌ Poor Determinism"
          fi
          
          # Create badge JSON
          mkdir -p .github/badges
          cat > .github/badges/determinism.json << EOF
          {
            "schemaVersion": 1,
            "label": "Determinism",
            "message": "${deterministic_count}/${total_count} (${success_rate}%)",
            "color": "${badge_color}",
            "namedLogo": "github"
          }
          EOF
          
          echo "📊 Badge data: ${deterministic_count}/${total_count} experiments deterministic (${success_rate}%)"

      - name: Comment on PR with determinism results
        if: github.event_name == 'pull_request' && steps.determinism_test.conclusion != 'skipped'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            const exitCode = '${{ steps.determinism_test.outputs.exit_code }}';
            const successRate = '${{ steps.determinism_test.outputs.success_rate || 0 }}';
            const deterministicCount = '${{ steps.determinism_test.outputs.deterministic_count || 0 }}';
            const nonDeterministicCount = '${{ steps.determinism_test.outputs.non_deterministic_count || 0 }}';
            const reportFile = '${{ steps.determinism_test.outputs.report_file }}';
            
            let status = exitCode === '0' ? '✅ PASS' : '❌ FAIL';
            let emoji = exitCode === '0' ? '🧪' : '⚠️';
            
            let summary = `${emoji} **Alchemist Determinism Smoke Test Results**\n\n`;
            summary += `| Metric | Value |\n`;
            summary += `|--------|-------|\n`;
            summary += `| Status | ${status} |\n`;
            summary += `| Deterministic Experiments | ${deterministicCount} |\n`;
            summary += `| Non-deterministic Experiments | ${nonDeterministicCount} |\n`;
            summary += `| Success Rate | ${successRate}% |\n\n`;
            
            if (reportFile && fs.existsSync(reportFile)) {
              const reportContent = fs.readFileSync(reportFile, 'utf8');
              
              // Extract failed experiments section if exists
              const failedMatch = reportContent.match(/❌ Failed Experiments:\n-{30}\n(.*?)(?=\n\n|✅|🔧|$)/s);
              if (failedMatch) {
                summary += `### ❌ Failed Experiments\n\`\`\`\n${failedMatch[1].trim()}\n\`\`\`\n\n`;
              }
            }
            
            if (exitCode !== '0') {
              summary += `### 🔧 Troubleshooting Tips\n`;
              summary += `1. Check seed configuration in experiment manifests\n`;
              summary += `2. Disable parallel processing in experimental setup\n`;
              summary += `3. Verify deterministic mode is enabled\n`;
              summary += `4. Review floating point precision in metrics calculation\n`;
              summary += `5. Check for time-dependent operations in experiment code\n\n`;
            }
            
            summary += `📊 View detailed results in the [workflow artifacts](${context.payload.pull_request.html_url}/checks).`;
            
            // Find existing comment to update or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('Alchemist Determinism Smoke Test Results')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: summary
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: summary
              });
            }

      - name: Set PR status check
        if: github.event_name == 'pull_request' && steps.determinism_test.conclusion != 'skipped'
        uses: actions/github-script@v7
        with:
          script: |
            const exitCode = '${{ steps.determinism_test.outputs.exit_code }}';
            const successRate = '${{ steps.determinism_test.outputs.success_rate || 0 }}';
            const deterministicCount = '${{ steps.determinism_test.outputs.deterministic_count || 0 }}';
            const nonDeterministicCount = '${{ steps.determinism_test.outputs.non_deterministic_count || 0 }}';
            
            const state = exitCode === '0' ? 'success' : 'failure';
            const description = exitCode === '0' ? 
              `All experiments deterministic (${deterministicCount}/${parseInt(deterministicCount) + parseInt(nonDeterministicCount)})` :
              `${nonDeterministicCount} non-deterministic experiments found`;
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: state,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: description,
              context: 'Alchemist Determinism Test'
            });

      - name: Fail job if determinism tests failed
        if: steps.determinism_test.outputs.exit_code != '0' && steps.determinism_test.conclusion != 'skipped'
        run: |
          echo "❌ Determinism smoke test failed!"
          echo "🔍 Non-deterministic experiments detected - please review results above"
          exit 1

  # 📊 Summary job for workflow status
  determinism-summary:
    runs-on: ubuntu-latest
    needs: [determinism-smoke-test]
    if: always()
    steps:
      - name: Determinism test summary
        run: |
          echo "🧙‍♂️ Alchemist Determinism Smoke Test Summary"
          echo "============================================="
          
          if [[ "${{ needs.determinism-smoke-test.result }}" == "success" ]]; then
            echo "✅ Determinism smoke test PASSED"
            echo "🧪 All experiments produced reproducible results"
          elif [[ "${{ needs.determinism-smoke-test.result }}" == "skipped" ]]; then
            echo "ℹ️ Determinism smoke test SKIPPED" 
            echo "📋 No experiment manifests found to test"
          else
            echo "❌ Determinism smoke test FAILED"
            echo "⚠️ Non-deterministic experiments detected"
            echo "🔧 Review workflow artifacts for troubleshooting guidance"
          fi
          
          echo ""
          echo "🧙‍♂️ \"A potion that changes each time you brew it is not alchemy, it's chaos.\""
          echo "    - Bootstrap Sentinel's Alchemist Wisdom"