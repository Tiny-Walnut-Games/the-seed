name: 🔥 Streak Monitor - Idea Implementation Health

on:
  schedule:
    # Run daily at 9 AM UTC to track idea implementation streaks
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      evaluation_window:
        description: 'Evaluation window in days'
        required: false
        default: '14'
        type: string
      force_alert:
        description: 'Force alert generation for testing'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  streak-monitor:
    runs-on: ubuntu-latest
    name: Monitor Idea Implementation Streaks
    
    steps:
    - name: 🧙‍♂️ Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for streak analysis
    
    - name: 🐍 Setup Python Environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml python-dateutil
    
    - name: 🔍 Analyze Idea Implementation Streaks
      id: streak_analysis
      run: |
        python3 scripts/streak-monitor/analyze-streaks.py \
          --tldl-path="TLDL/entries" \
          --charters-path="docs/charters" \
          --window="${{ github.event.inputs.evaluation_window || '14' }}" \
          --output-format="github"
    
    - name: 📊 Generate Streak Report
      id: generate_report
      run: |
        python3 scripts/streak-monitor/generate-report.py \
          --analysis-file="out/streak-analysis.json" \
          --template="scripts/streak-monitor/templates/daily-report.md" \
          --output="out/streak-report.md"
    
    - name: 🎯 Check Streak Health Thresholds
      id: health_check
      run: |
        python3 scripts/streak-monitor/health-check.py \
          --analysis-file="out/streak-analysis.json" \
          --config="pets/schema.yaml" \
          --alert-threshold="concerning"
    
    - name: 🚨 Post Streak Alert (if needed)
      if: steps.health_check.outputs.alert_needed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const alertData = JSON.parse(fs.readFileSync('out/streak-analysis.json', 'utf8'));
          
          const alertLevel = alertData.streak_status;
          const ratio = alertData.implementation_ratio.toFixed(3);
          const window = alertData.evaluation_window;
          
          const alertEmoji = {
            'concerning': '⚠️',
            'critical': '🔥'
          }[alertLevel] || '⚠️';
          
          const issueTitle = `${alertEmoji} Idea Implementation Streak Alert: ${alertLevel.toUpperCase()}`;
          
          const issueBody = `
          ## ${alertEmoji} Idea Implementation Health Alert
          
          **Status**: ${alertLevel.toUpperCase()}
          **Implementation Ratio**: ${ratio} (${alertData.implementations_completed}/${alertData.total_charters})
          **Evaluation Window**: ${window} days
          **Threshold**: ${alertData.threshold_details.${alertLevel}}
          
          ### 📊 Streak Statistics
          - **Total Charters Created**: ${alertData.total_charters}
          - **Implementations Completed**: ${alertData.implementations_completed}
          - **Ideas Abandoned**: ${alertData.ideas_abandoned}
          - **Ideas In Progress**: ${alertData.ideas_in_progress}
          
          ### 🎯 Recommended Actions
          ${alertLevel === 'critical' ? `
          **CRITICAL ALERT**: Implementation ratio below ${alertData.threshold_details.critical}
          - [ ] **Immediate charter audit required**
          - [ ] **Review kill criteria for stalled ideas**
          - [ ] **Assess resource allocation and capacity**
          - [ ] **Consider simplifying charter requirements**
          ` : `
          **WARNING**: Implementation ratio below healthy threshold
          - [ ] **Review current charter priorities**
          - [ ] **Check for implementation blockers**
          - [ ] **Consider pairing/collaboration on stalled ideas**
          - [ ] **Evaluate charter complexity vs capacity**
          `}
          
          ### 📋 Charter Review Queue
          ${alertData.stalled_charters.map(charter => 
            `- **${charter.title}** (${charter.days_stalled} days) - ${charter.status}`
          ).join('\\n')}
          
          ### 🔮 Chronicle Keeper Integration
          This alert was generated by the Streak Monitor system. Consider adding 🧠 to preserve this moment in the sacred scrolls.
          
          **Generated**: ${new Date().toISOString()}
          **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: issueTitle,
            body: issueBody,
            labels: ['streak-monitor', 'idea-health', alertLevel]
          });
    
    - name: 📈 Update Pet Events Log
      run: |
        python3 scripts/pet-events/record-streak-event.py \
          --analysis-file="out/streak-analysis.json" \
          --pet-events-log="metrics/pet_events.log"
    
    - name: 💬 Post Daily Streak Summary
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('out/streak-report.md', 'utf8');
          
          console.log('='.repeat(60));
          console.log('🔥 DAILY IDEA IMPLEMENTATION STREAK SUMMARY');
          console.log('='.repeat(60));
          console.log(report);
          console.log('='.repeat(60));
    
    - name: 🎯 Generate TLDL Entry (if significant)
      if: steps.health_check.outputs.tldl_worthy == 'true'
      run: |
        python3 scripts/streak-monitor/generate-tldl.py \
          --analysis-file="out/streak-analysis.json" \
          --template="docs/tldl_template.yaml" \
          --output="TLDL/entries/TLDL-$(date +%Y-%m-%d)-StreakMonitorAlert.md"
    
    - name: 📊 Create Streak Metrics Badge
      run: |
        python3 scripts/streak-monitor/generate-badge.py \
          --analysis-file="out/streak-analysis.json" \
          --output="out/streak-badge.json"
    
    - name: 🧠 Chronicle Keeper Auto-Trigger
      if: steps.health_check.outputs.chronicle_worthy == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const analysis = JSON.parse(fs.readFileSync('out/streak-analysis.json', 'utf8'));
          
          // Trigger Chronicle Keeper for significant streak events
          const comment = `🧠 Streak Monitor Event: ${analysis.streak_status.toUpperCase()} implementation health detected
          
          TLDL: Idea implementation streak ${analysis.streak_status} - ratio ${analysis.implementation_ratio.toFixed(3)} over ${analysis.evaluation_window} days requires lore preservation for pattern analysis and system health tracking.`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🧠 Chronicle Keeper: Streak Monitor Milestone',
            body: comment,
            labels: ['chronicle-keeper', 'streak-monitor', 'auto-generated']
          });
    
    - name: 🔄 Cleanup Temporary Files
      if: always()
      run: |
        rm -rf out/streak-analysis.json out/streak-report.md
        echo "Streak monitoring completed - temporary files cleaned"

  # Archive streak data for historical analysis
  archive-streak-data:
    runs-on: ubuntu-latest
    needs: streak-monitor
    if: always()
    
    steps:
    - name: 🧙‍♂️ Checkout Repository
      uses: actions/checkout@v4
    
    - name: 📅 Archive Daily Streak Data
      run: |
        mkdir -p data/streak-archives/$(date +%Y)/$(date +%m)
        
        if [ -f "out/streak-analysis.json" ]; then
          cp out/streak-analysis.json data/streak-archives/$(date +%Y)/$(date +%m)/streak-$(date +%Y-%m-%d).json
          
          echo "Archived streak data for $(date +%Y-%m-%d)"
          echo "File: data/streak-archives/$(date +%Y)/$(date +%m)/streak-$(date +%Y-%m-%d).json"
        fi
    
    - name: 📊 Generate Monthly Streak Trends
      if: github.event.schedule || github.event_name == 'workflow_dispatch'
      run: |
        python3 scripts/streak-monitor/monthly-trends.py \
          --archive-path="data/streak-archives" \
          --output="data/streak-trends/monthly-$(date +%Y-%m).json"