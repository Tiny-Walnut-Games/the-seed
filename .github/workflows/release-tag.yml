name: 🚀 Warbler Release

on:
  workflow_dispatch:
    inputs:
      publish_core:
        description: 'Publish warbler-core package'
        required: false
        default: false
        type: boolean
      publish_packs:
        description: 'Publish warbler content packs'
        required: false
        default: false  
        type: boolean
      dry_run:
        description: 'Dry run (test publishing without actually publishing)'
        required: false
        default: true
        type: boolean
      version_bump:
        description: 'Version bump type (if publishing)'
        required: false
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

env:
  NODE_VERSION: '20'

jobs:
  validate-before-release:
    name: 🔍 Pre-Release Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v3.6.0
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.0.1
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔨 Build all packages
      run: |
        cd packages/warbler-core && npm run build
        cd ../../packs/warbler-pack-core && npm run build
        cd ../warbler-pack-faction-politics && npm run build
        
    - name: 🧪 Run tests
      run: |
        cd packages/warbler-core && npm test
        
    - name: ✅ Validate templates
      run: |
        node "packages/com.twg.the-seed/The Living Dev Agent/scripts/validate-warbler-pack.mjs" packs/warbler-pack-core/pack/templates.json
        node "packages/com.twg.the-seed/The Living Dev Agent/scripts/validate-warbler-pack.mjs" packs/warbler-pack-faction-politics/pack/templates.json
        
    - name: 🎭 Run simulation
      run: node "packages/com.twg.the-seed/The Living Dev Agent/scripts/simulate-warble.mjs"

  publish-core:
    name: 📦 Publish Warbler Core
    runs-on: ubuntu-latest
    needs: validate-before-release
    if: inputs.publish_core == true
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v3.6.0
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.0.1
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔨 Build warbler-core
      run: |
        cd packages/warbler-core
        npm run build
        
    - name: 🏷️ Version bump (if not dry run)
      if: inputs.dry_run == false
      run: |
        cd packages/warbler-core
        npm version ${{ inputs.version_bump }} --no-git-tag-version
        echo "Version updated to $(node -e "console.log(require('./package.json').version)")"
        
    - name: 🚀 Publish warbler-core (dry run)
      if: inputs.dry_run == true
      run: |
        cd packages/warbler-core
        npm publish --dry-run
        echo "✅ Dry run completed for warbler-core"
        
    - name: 🚀 Publish warbler-core (actual)
      if: inputs.dry_run == false
      run: |
        cd packages/warbler-core
        npm publish
        echo "✅ Published warbler-core"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-packs:
    name: 📦 Publish Content Packs
    runs-on: ubuntu-latest
    needs: [validate-before-release, publish-core]
    if: inputs.publish_packs == true && (success() || needs.publish-core.result == 'skipped')
    
    strategy:
      matrix:
        pack:
          - warbler-pack-core
          - warbler-pack-faction-politics
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v3.6.0
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.0.1
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔨 Build pack
      run: |
        cd packs/${{ matrix.pack }}
        npm run build
        
    - name: 🏷️ Version bump (if not dry run)
      if: inputs.dry_run == false
      run: |
        cd packs/${{ matrix.pack }}
        npm version ${{ inputs.version_bump }} --no-git-tag-version
        echo "Version updated to $(node -e "console.log(require('./package.json').version)")"
        
    - name: 🚀 Publish pack (dry run)
      if: inputs.dry_run == true
      run: |
        cd packs/${{ matrix.pack }}
        npm publish --dry-run
        echo "✅ Dry run completed for ${{ matrix.pack }}"
        
    - name: 🚀 Publish pack (actual)
      if: inputs.dry_run == false
      run: |
        cd packs/${{ matrix.pack }}
        npm publish
        echo "✅ Published ${{ matrix.pack }}"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  release-summary:
    name: 📋 Release Summary
    runs-on: ubuntu-latest
    needs: [validate-before-release, publish-core, publish-packs]
    if: always()
    
    steps:
    - name: 📊 Report results
      run: |
        echo "🎭 Warbler Release Summary"
        echo "========================="
        echo "Validation: ${{ needs.validate-before-release.result }}"
        echo "Core publish: ${{ needs.publish-core.result }}"
        echo "Packs publish: ${{ needs.publish-packs.result }}"
        echo "Dry run: ${{ inputs.dry_run }}"
        echo "Version bump: ${{ inputs.version_bump }}"
        
        if [ "${{ needs.validate-before-release.result }}" == "success" ]; then
          echo "✅ All validations passed"
        else
          echo "❌ Validation failed"
        fi
        
        if [ "${{ inputs.dry_run }}" == "true" ]; then
          echo "🧪 This was a dry run - no packages were actually published"
        else
          echo "🚀 Live publishing attempted"
        fi
        
        echo "🎯 Release workflow completed"