# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to include the gitignore template instead of
#  adding these rules to the project gitignore file.
#  https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# DevTimeTravel snapshots (ignore snapshots but keep structure)
.devtimetravel/snapshots/
.devtimetravel/index.json

# DevTimeTravel compression artifacts
devtimetravel_compress_report.json

# DTT Vault storage (off-Git, fenced)
.dtt/

# Character configuration (contains personal choices)
.character_config

# Temporary files
/tmp/
*.tmp
*.temp

# Log files
*.log
logs/

# CID Faculty & Chronicle Keeper cache and cooldown files
out/cid/cache/
out/cid/cooldown/
out/chronicle/cooldown/
**/cooldown*.json

# Game-specific files (if implementing the actual game)
save_files/
player_data/
achievements.json
# Node.js dependencies (Chronicle Keeper and workspace packages)
node_modules/
package-lock.json
packages/*/node_modules/
packs/*/node_modules/
packages/*/dist/
packs/*/dist/

# Chronicle Keeper temporary files
/tmp/chronicle-*.json
/tmp/parsed-*.json
/tmp/scroll-*.json

# CID Schoolhouse artifacts
out/cid/

# Security artifacts - critical security files that should never be committed
experience/security/master_key.secret
experience/security/*.key
experience/security/*.pem
experience/security/*.p12
experience/security/*.jks
*.secret
*.private
*_key.txt
*_key.json

# Security scan results - can contain sensitive information
*-security-*.json
*-security-*.sarif
bandit-results.*
semgrep-results.*
trufflehog-results.*
safety-report.*
npm-audit-results.*
pip-audit-results.*

# SBOM files - may contain sensitive dependency information
sbom*.json
sbom*.xml

# Onboarding reports - generated by LDA story initialization
onboarding_report.json
out/

# Self-Care Module Privacy Protection
# The local_journal/ directory contains private personal reflections
# and should NEVER be committed to preserve developer privacy
local_journal/
/.vs/CopilotSnapshots
/Library
/Temp
/.vs/TWG-TLDA/FileContentIndex
/.vs
/.vs
