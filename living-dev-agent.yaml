# Living Dev Agent Configuration
# Configuration for GitHub Copilot integration with Living Dev Agent workflow

agent_info:
  name: "Living Dev Agent"
  version: "1.0.0"
  description: "AI-powered development workflow with TLDL and DevTimeTravel integration"
  
copilot_config:
  # Copilot behavior customization
  auto_tldl:
    enabled: true
    triggers:
      - "on_commit"
      - "on_pr_merge"
      - "on_significant_change"
    template_path: "docs/tldl_template.yaml"
    
  suggestion_preferences:
    # Prefer patterns that align with Living Dev Agent workflow
    patterns:
      - "TLDL documentation for significant changes"
      - "DevTimeTravel snapshot annotations"
      - "Comprehensive error handling and logging"
      - "Self-documenting code with clear intent"
      
  code_style:
    # Encourage specific coding patterns
    preferred_practices:
      - "Use descriptive variable and function names"
      - "Include docstrings for all public functions"
      - "Add type hints in Python code"
      - "Use meaningful commit messages"
      - "Document architectural decisions"
      
  workflow_integration:
    # Integration with development tools
    linting:
      auto_run: true
      tools:
        - "src/SymbolicLinter/system_linter.py"
        - "src/SymbolicLinter/symbolic_linter.py"
        - "src/SymbolicLinter/validate_docs.py"
        
    validation:
      debug_overlay: "src/DebugOverlayValidation/debug_overlay_validator.py"
      documentation: "src/SymbolicLinter/validate_docs.py"
      
# Context enhancement for Copilot
context_enhancement:
  # Additional context to provide to Copilot
  project_context:
    domain: "AI-powered development workflow"
    architecture: "Cross-platform agent system"
    key_technologies:
      - "Python 3.11+"
      - "Shell scripting"
      - "YAML configuration"
      - "Git workflows"
      - "CI/CD pipelines"
      - "Unity (optional)"
      - "Multiple rendering pipelines"
      
  development_patterns:
    # Patterns Copilot should recognize and suggest
    tldl_patterns:
      entry_format: "TLDL-YYYY-MM-DD-DescriptiveTitle.md"
      required_sections:
        - "Entry ID"
        - "Author"
        - "Context"
        - "Summary"
        - "Discoveries"
        - "Actions Taken"
        - "Next Steps"
        
    devtimetravel_patterns:
      snapshot_triggers:
        - "Major architectural changes"
        - "Feature completion"
        - "Bug fixes"
        - "Performance optimizations"
        
    validation_patterns:
      linting_schedule: "on_save, on_commit, on_pr"
      validation_scope: "changed_files, related_files"
      
# Agent behavior customization
agent_behavior:
  # How the agent should behave in different contexts
  communication_style:
    tone: "professional, helpful, concise"
    detail_level: "comprehensive for complex topics, brief for simple tasks"
    
  decision_making:
    # Guide agent decision-making process
    prioritization:
      1: "Code correctness and safety"
      2: "Documentation completeness"
      3: "Performance and efficiency"
      4: "Code maintainability"
      5: "Feature completeness"
      
  learning_mode:
    # Enable continuous learning from project patterns
    pattern_recognition: true
    feedback_integration: true
    context_adaptation: true
    
# Integration settings
integrations:
  github:
    # GitHub-specific integrations
    auto_pr_description: true
    issue_linking: true
    commit_message_format: "conventional_commits"
    
  ide_settings:
    # IDE-specific configurations
    vscode:
      extensions:
        - "GitHub.copilot"
        - "GitHub.copilot-chat"
        - "ms-python.python"
        - "redhat.vscode-yaml"
      settings:
        "github.copilot.enable": true
        "github.copilot.advanced.UnityEngine.overrideEngine": "copilot-codex"
        
    jetbrains:
      plugins:
        - "GitHub Copilot"
        - "Python"
        - "YAML/Ansible support"
        
# Custom prompts and templates
custom_prompts:
  tldl_generation:
    prompt: |
      Generate a TLDL (The Living Dev Log) entry for the following changes.
      Use the template structure and ensure all required sections are included.
      Focus on actionable discoveries and clear next steps.
      
  code_review:
    prompt: |
      Review this code with focus on:
      1. Living Dev Agent workflow compliance
      2. Documentation completeness
      3. Error handling and logging
      4. Integration with existing linting tools
      
  architecture_decisions:
    prompt: |
      Document this architectural decision in TLDL format.
      Include rationale, alternatives considered, and implementation implications.
      
# Monitoring and analytics
monitoring:
  # Track agent effectiveness
  metrics:
    tldl_entry_quality: true
    code_suggestion_acceptance: true
    validation_pass_rate: true
    developer_satisfaction: true
    
  reporting:
    frequency: "weekly"
    format: "markdown_summary"
    include_recommendations: true
